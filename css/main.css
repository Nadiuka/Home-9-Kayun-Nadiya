/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}body{font-family:"Droid Sans",sans-serif;color:#333}h1{font-family:"Oswald",sans-serif;color:#df001f}h2{font-family:"Oswald",sans-serif;color:#333}.navigation-menu a{color:#fff}.main-header span{font-family:"Great Vibes",sans-serif}*{box-sizing:border-box}img{width:100%;height:auto;vertical-align:middle}a{text-decoration:none}ul{list-style-type:none;padding-left:0;margin:0}.container{max-width:1200px;width:100%;margin:0 auto;height:auto}.clearfix:after{content:'';clear:both;display:block}.navigation-menu{background-color:#df001f;display:flex;justify-content:space-between;padding:5px 50px 5px 68px}.navigation-menu nav{display:flex;align-items:center}.navigation-items,.navigation-icons{display:flex;align-items:center}.navigation-items li,.navigation-icons li{padding:0 5px}.navigation-items a,.navigation-icons a{text-transform:uppercase}.navigation-items a{font-size:13px;line-height:44px;font-weight:700;padding:0 5px}.navigation-items a:hover{text-decoration:line-through}.navigation-icons a{font-size:14px;font-weight:400;line-height:30px;padding:0 5px}.navigation-icons i{margin-right:10px}.navigation-button a{font-size:12px;font-weight:700;line-height:30px;padding:20px 44px;border-radius:25px;background-color:white;color:#df001f;transition:0.7s}.navigation-button a:hover{transition:0.7s;color:#333}.main-foto{position:relative;border-bottom:3px solid #df001f}.header{position:absolute;width:100%;top:120px;left:10px;text-align:center}h1{font-size:90px;font-weight:700;text-transform:uppercase;margin:0}.main-header span{font-size:60px;font-style:italic}.main-header .header-button{margin-top:54px}.main-header a{border-radius:25px;background-color:#df001f;padding:20px 32px;font-size:12px;font-weight:700;line-height:30px;color:#fff;transition:0.7s;border:1px solid #df001f}.main-header a:hover{transition:0.7s;color:#df001f;background-color:white}.introducing{padding:100px 0 0 0}.introducing-members{padding-bottom:100px;border-bottom:1px solid #dfdfdf}.angle{display:flex;justify-content:flex-end}.angle i{width:35px;height:35px;background-color:#df001f;padding:5px;color:#fff;margin:10px 4px;text-align:center}h2{font-size:32px;font-weight:400;line-height:30px;margin:0}h2 span{font-family:"Great Vibes",sans-serif;color:#df001f;font-size:32px;font-weight:400;display:inherit}.members{display:flex;justify-content:space-between}.members .members-item{position:relative}.members .members-item:hover .active-icon{display:block}.name-members{background-color:#df001f;padding:17px 24px 24px 27px;position:absolute;bottom:0;width:100%;max-width:370px}.name-members h3{font-size:22px;font-weight:400;line-height:20px;color:#fff;font-family:"Oswald",sans-serif;margin:3px 0}.name-members span{font-size:16px;color:#fff;font-weight:400}.name-members .active-icon{display:none;margin-top:25px}.name-members .active-icon li{float:left}.name-members .active-icon a{color:#ffffff;font-size:14px;font-weight:400;text-transform:uppercase;padding-right:10px}.name-members .active-icon i{padding-right:10px}.concert-and-videos{display:flex;justify-content:space-between;padding-top:90px}.upcoming-concert{border-bottom:4px solid #e9e9e9}.concert-info{display:flex;justify-content:flex-start}.main-foto-concert{margin-top:40px;position:relative}.main-foto-concert .data{position:absolute;top:100px;display:flex;flex-direction:column;left:100px}.main-foto-concert .data span{font-family:"Oswald",sans-serif;font-size:45px;font-weight:400;color:#fff}.table{padding:30px 80px;max-height:290px;margin-top:20px}.table td{font-size:16px;font-weight:400;line-height:30px;padding-right:5px}.table .purchase-ticket{margin-top:30px}.table a{font-size:12px;font-weight:700;line-height:30px;text-transform:uppercase;color:#fff;border-radius:25px;background-color:#df001f;padding:20px 40px;transition:0.7s;border:1px solid #df001f}.table a:hover{transition:0.7s;color:#df001f;background-color:white}.wrapper{padding:100px 0}.history{background-color:#333333;display:flex;justify-content:flex-end}.history .about-history{padding:20px 0 40px 100px}.history .about-history .learn-more{margin-top:40px}.history .about-history a{font-size:12px;font-weight:700;line-height:30px;text-transform:uppercase;color:#df001f;transition:0.7s;border-radius:25px;background-color:#ffffff;padding:20px 40px}.history .about-history a:hover{transition:0.7s;color:#fff;background-color:#df001f}.history p{color:#fff}.history .our-founder{font-family:"Oswald",sans-serif;font-size:26px;font-weight:500;line-height:20px;text-transform:uppercase}.history .start{font-size:18px;font-weight:400}.history .start span{font-family:"Great Vibes",sans-serif;font-size:40px;font-weight:400;line-height:30px}.songs-instagram{display:flex;justify-content:space-between}.songs-instagram .album-foto img{max-width:120px;height:auto}.songs-instagram .songs{margin-top:80px;-moz-column-count:3;-webkit-column-count:3;column-count:3;column-gap:90px}.songs-instagram .songs li{transition:0.5s}.songs-instagram .songs li:hover{transition:0.5s;color:#df001f}.songs-instagram .songs a{font-size:16px;font-weight:400;line-height:40px;color:#333}.songs-instagram .songs a:hover{transition:0.5s;color:#df001f}.songs-instagram .instagram-feed li{float:left;padding:10px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
